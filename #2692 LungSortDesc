#include <iostream>
#include <cstring>
#include <algorithm>
#include <vector> 
/*
std::string nume="doarvocale";
std::ifstream fin(nume+".in");
std::ofstream fout(nume+".out");*/
struct gene{
    int litere;
    std::string cuv;
};
std::vector<gene>v;
std::string c;
bool cmp(gene a,gene b)
{
    if(a.litere>b.litere)
    {
        return true;
    }
    else if(a.litere==b.litere)
    {
        for(int i=0;i<a.cuv.length();i++)
        {
            if(int(a.cuv[i])>int(b.cuv[i]))
            {
                return false;
            }
            else if(int(a.cuv[i])<int(b.cuv[i]))
            {
                return true;
            }
        }
        return false;
    }
    else return false;
}


int main()
{
    getline(std::cin,c);
    for(int i=0;i<c.length();i++)
    {
        if((int(c[i])>=65&&int(c[i])<=90)||(int(c[i])>=97&&int(c[i])<=122))
        {
            std::string nou;
            while(((int(c[i])>=65&&int(c[i])<=90)||(int(c[i])>=97&&int(c[i])<=122))&&i<c.length())
            {
                nou+=c[i];
                i++;
            }
            gene g;
            g.cuv=nou;
            g.litere=nou.length();
            v.push_back(g);
        }
    }
    std::sort(v.begin(),v.end(),cmp);
    for(int i=0;i<v.size();i++)
    {
        std::cout<<v[i].cuv<<'\n';
    }
    return 0;
}
//if(c[i]=='a'||c[i]=='o'||c[i]=='u'||c[i]=='e'||c[i]=='i'||c[i]=='A'||c[i]=='O'||c[i]=='U'||c[i]=='E'||c[i]=='I')
